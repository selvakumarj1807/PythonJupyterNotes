Student API Guide - Django REST Framework
=========================================

Base URL: http://localhost:8000/api/students/

-----------------------------
1. Create a New Student (POST)
-----------------------------
URL:        /api/students/
Method:     POST
Content-Type: application/json

Body:
{
    "name": "Jane Smith",
    "email": "jane@example.com",
    "course": "Django"
}

Success Response Code: 201 CREATED

----------------------------
2. List All Students (GET)
----------------------------
URL:        /api/students/
Method:     GET
Description:
    Retrieves a list of all students.

Example Response:
[
    {
        "id": 1,
        "name": "John Doe",
        "email": "john@example.com",
        "course": "Python",
        "created_at": "2025-05-14T09:30:00Z"
    }
]

---------------------------------------
3. Retrieve Student by ID (GET)
---------------------------------------
URL:        /api/students/<id>/
Method:     GET

Example:
    /api/students/1/

Success Response:
{
    "id": 1,
    "name": "John Doe",
    "email": "john@example.com",
    "course": "Python",
    "created_at": "2025-05-14T09:30:00Z"
}

-----------------------------------------
4. Update Student by ID (PUT)
-----------------------------------------
URL:        /api/students/<id>/
Method:     PUT
Content-Type: application/json

Example:
    /api/students/1/

Body:
{
    "name": "John Updated",
    "email": "john@example.com",
    "course": "ReactJS"
}

Success Response Code: 200 OK

-----------------------------------------
5. Delete Student by ID (DELETE)
-----------------------------------------
URL:        /api/students/<id>/
Method:     DELETE

Example:
    /api/students/1/

Success Response Code: 204 NO CONTENT

----------------------------------------------------
To Test the API:
----------------------------------------------------
1. Use Postman or Thunder Client in VS Code.
2. Set Content-Type to application/json when sending POST/PUT requests.
3. Server must be running: 
   Run: python manage.py runserver

----------------------------------------------------
Additional Notes:
----------------------------------------------------
- Make sure migrations are applied:
    python manage.py makemigrations
    python manage.py migrate

- Admin panel available at:
    http://localhost:8000/admin/

